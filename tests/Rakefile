require 'rspec/core/rake_task'
RSpec::Core::RakeTask.new(:spec)

TYPE_REGEXES = [
  # For lines like: constexpr const char* KEY = "value";
  /const\s+char\s*\*/,

  # For lines like: constexpr int KEY = value;
  /int/,

  # For lines like: constexpr uint8_t KEY = value;
  /uint8_t/
]

def get_definitions(file_name, type_regex)
  File.readlines(File.expand_path(File.join('../../C++/include', file_name), __FILE__)).map { |line|
    m = line.match(/constexpr\s+#{type_regex}\s*(.+?)\s*=\s*(.+?)\s*;/)
    if m && (key = m[1]) && (value = m[2])
      "  #{key} = #{value}".gsub('"', "'")
    else
      nil
    end
  }.compact
end

desc 'Generate constant definitions file using definitions from C++ header files'
task :import_definitions do
  header_files = %w(mock_hardware/Shared.h Shared.h Settings.h MotorController.h Motor.h Hardware.h)
  definitions_file = File.expand_path('../spec/support/definitions.rb', __FILE__)
  buf = ['# This file is generated by the import_definitions rake task', '# DO NOT EDIT', 'module Tests']
  buf.concat(header_files.map { |f| TYPE_REGEXES.map { |r| get_definitions(f, r) } })
  buf << 'end'
  File.write(definitions_file, buf.flatten.join("\n") << "\n")
  puts 'Successfully imported constant definitions'
end
